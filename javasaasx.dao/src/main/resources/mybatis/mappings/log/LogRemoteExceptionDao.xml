<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.choudou5.javasaasx.dao.log.LogRemoteExceptionDao" >
    <resultMap id="RM_LogRemoteException" type="com.choudou5.javasaasx.dao.log.po.LogRemoteExceptionPo">
        <result property="id" column="id"/>
        <result property="bizModule" column="biz_module"/>
        <result property="bizId" column="biz_id"/>
        <result property="beanName" column="bean_name"/>
        <result property="methodName" column="method_name"/>
        <result property="remark" column="remark"/>
        <result property="paramsVals" column="params_vals"/>
        <result property="paramsTypes" column="params_types"/>
        <result property="status" column="status"/>
        <result property="exception" column="exception"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="columns">
    <![CDATA[
        `id`, `biz_module`, `biz_id`, `bean_name`, `method_name`, `remark`, `params_vals`, `params_types`, `status`, `exception`, `create_time`, `update_by`, `update_time`
    ]]>
    </sql>

    <sql id="where">
        <where>
            
            <!--
            eg: AND title LIKE concat('%',#{paramBean.title},'%')
            -->
            <if test="paramBean != null">
                <if test="paramBean.id != null and paramBean.id != ''">
                    AND `id` = #{paramBean.id}
                </if>
                <if test="paramBean.bizModule != null and paramBean.bizModule != ''">
                    AND `biz_module` = #{paramBean.bizModule}
                </if>
                <if test="paramBean.bizId != null and paramBean.bizId != ''">
                    AND `biz_id` = #{paramBean.bizId}
                </if>
                <if test="paramBean.beanName != null and paramBean.beanName != ''">
                    AND `bean_name` LIKE concat('%',#{paramBean.beanName},'%')
                </if>
                <if test="paramBean.methodName != null and paramBean.methodName != ''">
                    AND `method_name` = #{paramBean.methodName}
                </if>
                <if test="paramBean.remark != null and paramBean.remark != ''">
                    AND `remark` LIKE concat('%',#{paramBean.remark},'%')
                </if>
                <if test="paramBean.paramsVals != null and paramBean.paramsVals != ''">
                    AND `params_vals` = #{paramBean.paramsVals}
                </if>
                <if test="paramBean.paramsTypes != null and paramBean.paramsTypes != ''">
                    AND `params_types` = #{paramBean.paramsTypes}
                </if>
                <if test="paramBean.status != null and paramBean.status != ''">
                    AND `status` = #{paramBean.status}
                </if>
                <if test="paramBean.exception != null and paramBean.exception != ''">
                    AND `exception` = #{paramBean.exception}
                </if>
                <if test="paramBean.createTime != null ">
                    AND `create_time` = #{paramBean.createTime}
                </if>
                <if test="paramBean.updateBy != null and paramBean.updateBy != ''">
                    AND `update_by` = #{paramBean.updateBy}
                </if>
                <if test="paramBean.updateTime != null ">
                    AND `update_time` = #{paramBean.updateTime}
                </if>
            </if>
            <if test="extendParams.size() > 0">
                <foreach collection="extendParams" item="value" index="key" open="" separator="" close="">
                    AND ${key} ${value}
                </foreach>
            </if>
        </where>
    </sql>

    <insert id="insert" keyProperty="id">
        INSERT INTO log_remote_exception (
        <if test="id != null">`id`</if>
        <if test="bizModule != null">,`biz_module`</if>
        <if test="bizId != null">,`biz_id`</if>
        <if test="beanName != null">,`bean_name`</if>
        <if test="methodName != null">,`method_name`</if>
        <if test="remark != null">,`remark`</if>
        <if test="paramsVals != null">,`params_vals`</if>
        <if test="paramsTypes != null">,`params_types`</if>
        <if test="status != null">,`status`</if>
        <if test="exception != null">,`exception`</if>
        <if test="createTime != null">,`create_time`</if>


        ) VALUES (
        <if test="id != null">#{id}</if>
        <if test="bizModule != null">,#{bizModule}</if>
        <if test="bizId != null">,#{bizId}</if>
        <if test="beanName != null">,#{beanName}</if>
        <if test="methodName != null">,#{methodName}</if>
        <if test="remark != null">,#{remark}</if>
        <if test="paramsVals != null">,#{paramsVals}</if>
        <if test="paramsTypes != null">,#{paramsTypes}</if>
        <if test="status != null">,#{status}</if>
        <if test="exception != null">,#{exception}</if>
        <if test="createTime != null">,#{createTime}</if>
        )
     </insert>

    <insert id="batchInsert" keyProperty="id">
        INSERT INTO log_remote_exception (
        `id`
        ,`biz_module`
        ,`biz_id`
        ,`bean_name`
        ,`method_name`
        ,`remark`
        ,`params_vals`
        ,`params_types`
        ,`status`
        ,`exception`
        ,`create_time`

        ) VALUES
        <foreach collection="list" item="entity" index="index" separator="," >
        (
        #{entity.id}
        ,#{entity.bizModule}
        ,#{entity.bizId}
        ,#{entity.beanName}
        ,#{entity.methodName}
        ,#{entity.remark}
        ,#{entity.paramsVals}
        ,#{entity.paramsTypes}
        ,#{entity.status}
        ,#{entity.exception}
        ,#{entity.createTime}

        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE log_remote_exception SET
            `biz_module` = #{bizModule} ,
            `biz_id` = #{bizId} ,
            `bean_name` = #{beanName} ,
            `method_name` = #{methodName} ,
            `remark` = #{remark} ,
            `params_vals` = #{paramsVals} ,
            `params_types` = #{paramsTypes} ,
            `status` = #{status} ,
            `exception` = #{exception} ,
            `update_by` = #{updateBy} ,
            `update_time` = #{updateTime} 
        WHERE
            id = #{id} 
    ]]>
    </update>

    <delete id="deleteById">
    <![CDATA[
        DELETE FROM log_remote_exception
        WHERE id = #{id} 
    ]]>
    </delete>

    <delete id="deleteByIds" >
        DELETE FROM log_remote_exception
        WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator="," >#{id} </foreach>
    </delete>

    <delete id="deleteBy">
        DELETE FROM log_remote_exception
        <include refid="where"/>
    </delete>


    <select id="findById" resultMap="RM_LogRemoteException">
        SELECT <include refid="columns"/>
        <![CDATA[
            FROM log_remote_exception
            WHERE id = #{id} 
        ]]>
    </select>

    <select id="count" resultType="long">
        SELECT count(1) FROM log_remote_exception
        <include refid="where"/>
    </select>

    <select id="findList" resultMap="RM_LogRemoteException">
        SELECT <include refid="columns"/>
        FROM log_remote_exception
        <include refid="where"/>
        <if test="orderBean != null and orderBean.orderBy != null">
            ORDER BY ${orderBean.orderBy} ${orderBean.order}
        </if>
        <if test="pageBean != null">
            limit ${pageBean.start}, ${pageBean.pageSize}
        </if>
    </select>

    <select id="findAll" resultMap="RM_LogRemoteException">
        SELECT <include refid="columns"/>
        FROM log_remote_exception
        <if test="orderBean != null and orderBean.orderBy != null">
            ORDER BY ${orderBean.orderBy} ${orderBean.order}
        </if>
    </select>

    <select id="findUniqueBy" resultMap="RM_LogRemoteException">
        SELECT <include refid="columns"/>
        FROM log_remote_exception
        <include refid="where"/>
        <if test="orderBean != null and orderBean.orderBy != null">
            ORDER BY ${orderBean.orderBy} ${orderBean.order}
        </if>
        limit 1
    </select>


</mapper>


